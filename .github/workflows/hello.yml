name: hello

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  workflow_dispatch:

concurrency:
  group: test
  
jobs:
  job:
    runs-on: ubuntu-latest
    steps:

    - name: Revert changes checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Script run
    - run: |
          chmod +x ./.github/scripts/hello.sh
          ./.github/scripts/hello.sh

    - name: Last successful commit ID
      uses: SamhammerAG/last-successful-build-action@v2
      id: last_successful_commit
      with:
        token: ${{ github.token }}
        branch: "main"
        workflow: "automation"
        verify: true

    - name: Commit hash
      run: |
        echo "Last commit before current run: ${{github.sha}}"
        echo "Last successful commit: ${{ steps.last_successful_commit.outputs.sha }}"
    

    - name: Revert changes
      run: |
        git config user.name grace-matson
        git config user.email gracematson@google.com
        git reset ${{ steps.last_successful_commit.outputs.sha }}
        git add .
        git commit -m "Trying to revert to ${{ steps.last_successful_commit.outputs.sha }}"

    - name: Create Pull Request for Revert
      uses: peter-evans/create-pull-request@v3.10.0
      with:
        token: ${{ github.token }}
        title: 'Automated PR'
        body: |
          This PR is to revert from commit ${{github.sha}} to ${{ steps.last_successful_commit.outputs.sha }} 
          because workflow ${{ github.workflow	}} failed on run ${{github.run_id}}
        branch: revert
    

  # first_job:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/github-script@v3
  #     with:
  #       script: |
  #           core.setFailed('failing on purpose')

  # second_job:
  #   runs-on: ubuntu-latest
  #   needs: first_job
  #   if: ${{ failure()}}
  #   steps:
  #     - run: echo "Hello world"

      # Runs a single command using the runners shell
#       - name: Hello world 
#         run: echo Hello, world!
#       - name: Gcloud command check
#         run: gcloud auth list
#       - name: Check Project
#         run: gcloud config list project
      # - run: |
      #     chmod +x ./.github/scripts/hello.sh
      #     ./.github/scripts/hello.sh
#
