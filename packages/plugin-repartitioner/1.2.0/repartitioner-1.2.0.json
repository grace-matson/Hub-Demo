{
  "properties": {
    "doc.Repartitioner-sparkcompute": "# Repartitioner\n\nThis plugin repartitions incoming data. This changes the level of parallelism of the pipeline.\n\nIncreasing partitions is usually done to increase parallelism when trying to speed up a pipeline.\nFor example, the database source is often configured to use a relatively small number of partitions\n(tens, but not hundreds or thousands). This is to prevent a flood of concurrent connections to the database,\nwhich would overwhelm the database. However, once all the data is read, it can sometimes make sense to\nrepartition to a much higher number to allow the rest of the pipeline to run with more parallelism.\n\nDecreasing partitions is done when you want to limit the amount of parallelism.\nFor example, if you want all of the output written to a single file, you can decrease the partitions to 1\nbefore writing to a file sink. As another example, you may want to decrease the partitions when writing to a\ndatabase sink to limit the amount of concurrent connections open to the database. As another example,\nyou may want to decrease the partitions before using a transform that makes API calls to an external service,\nin order to avoid hitting rate limits or causing high load on that external service.\n\n## Plugin Properties\n\n**Partitions:** Number of partitions to generate\n\n**Shuffle Data:** Whether to shuffle data when repartitioning.\nWhen set to true, incoming data will be shuffled across the cluster and the rest of the\npipeline (up to another shuffle plugin) will be executed using that many partitions.\nThis requires shuffling all the incoming data across the cluster,\nwhich can be a lot of I/O if the incoming data is large.\nWhen set to false, this hints to the engine that partitions should be combined locally when possible.\nThis may result in the engine changing the parallelism for earlier parts of the pipeline.\n\nFor example, suppose a source that reads data into 50 partitions is connected to a repartitioner\nthat decreases the partitions to 10.\n\nIf data is shuffled, 50 parallel tasks will be used to read the 50 source partitions.\nAfterward, data will be shuffled across the cluster down into 10 new partitions. \nThe rest of the pipeline will be handled by 10 parallel tasks, each processing a single partition.\n\nIf data is not shuffled, instead of reading the 50 source partitions with 50 parallel tasks,\nthe engine will instead use 10 parallel tasks, each one reading 5 partitions. Each task will\nthen locally coalesce their 5 partitions down into a single one.\n\nSimilarly, suppose a source that reads data into 10 partitions is connected to a repartitioner\nthat increases the partitions to 50. \n\nIf data is shuffled, 10 parallel tasks will be used to read the 10 source partitions.\nAfterward, data will be shuffled across the cluster up into 50 new partitions.\nThe rest of the pipeline will be handled by 50 parallel tasks, each processing a single partition.\n\nIf data is not shuffled, 10 parallel tasks will be used to read the 10 source partitions.\nThose same 10 tasks will be split each of their partitions into 5 new partitions to\ngenerate a total of 50 partitions.\n\nIn summary, shuffling data will always change the level of parallelism after the plugin.\nIf you do not shuffle data and are increasing the number of partitions, you do not actually\nend up changing the level of parallelism.\nIf you do not shuffle data and are decreasing the number of partitions, you may end up\nreducing the level of parallelism before the plugin as well.\n",
    "widgets.Repartitioner-sparkcompute": "{\n  \"outputs\": [],\n  \"metadata\": {\"spec-version\": \"1.0\"},\n  \"configuration-groups\": [{\n    \"label\": \"Repartitioner Configuration\",\n    \"properties\": [\n      {\n        \"widget-type\": \"number\",\n        \"name\": \"partitions\",\n        \"label\": \"Partitions\",\n        \"widget-attributes\": {\"default\": 1}\n      },\n      {\n        \"widget-type\": \"toggle\",\n        \"name\": \"shuffle\",\n        \"label\": \"Shuffle Data\",\n        \"widget-attributes\": {\n          \"default\": \"true\",\n          \"off\": {\n            \"label\": \"False\",\n            \"value\": \"false\"\n          },\n          \"on\": {\n            \"label\": \"True\",\n            \"value\": \"true\"\n          }\n        }\n      }\n    ]\n  }]\n}"
  },
  "parents": [
    "system:cdap-data-pipeline[6.1.0-SNAPSHOT,7.0.0-SNAPSHOT)",
    "system:cdap-data-streams[6.1.0-SNAPSHOT,7.0.0-SNAPSHOT)"
  ]
}