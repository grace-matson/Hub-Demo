{
  "parents": [
    "system:cdap-data-streams[4.3.0-SNAPSHOT,10.0.0-SNAPSHOT)"
  ],
  "properties": {
    "widgets.AzureEventHub-streamingsource": "{\"metadata\":{\"spec-version\":\"1.5\"},\"display-name\":\"Microsoft Azure Event Hub\",\"configuration-groups\":[{\"label\":\"Azure Event Hub Configurations\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Azure Event Hub Namespace\",\"name\":\"namespace\"},{\"widget-type\":\"textbox\",\"label\":\"Event Hub Name\",\"name\":\"name\"},{\"widget-type\":\"textbox\",\"label\":\"Shared Access Policy Name\",\"name\":\"policyName\"},{\"widget-type\":\"textbox\",\"label\":\"Shared Access Policy Key\",\"name\":\"policyKey\"},{\"widget-type\":\"textbox\",\"label\":\"Number of partitions\",\"name\":\"partitionCount\"},{\"widget-type\":\"textbox\",\"label\":\"Checkpoint Directory\",\"name\":\"checkpointDirectory\"},{\"widget-type\":\"textbox\",\"label\":\"Checkpoint Interval (seconds)\",\"name\":\"checkpointInterval\"},{\"widget-type\":\"textbox\",\"label\":\"Consumer Group\",\"name\":\"consumerGroup\"},{\"widget-type\":\"keyvalue\",\"label\":\"Per Partition Starting Offset\",\"name\":\"offset\",\"widget-attributes\":{\"showDelimiter\":\"false\",\"key-placeholder\":\"partition\",\"value-placeholder\":\"offset\"}},{\"widget-type\":\"textbox\",\"label\":\"Max Rate\",\"name\":\"maxRate\"},{\"widget-type\":\"select\",\"label\":\"Format\",\"name\":\"format\",\"widget-attributes\":{\"values\":[\"\",\"avro\",\"binary\",\"clf\",\"csv\",\"grok\",\"syslog\",\"text\",\"tsv\"],\"default\":\"\"}}]}],\"outputs\":[{\"name\":\"schema\",\"widget-type\":\"schema\",\"widget-attributes\":{\"default-schema\":{\"name\":\"etlSchemaBody\",\"type\":\"record\",\"fields\":[{\"name\":\"message\",\"type\":[\"bytes\",\"null\"]}]},\"schema-default-type\":\"string\",\"property-watch\":\"format\"}}]}",
    "doc.AzureEventHub-streamingsource": "# Azure Event Hub Spark Streaming Source\n\n\nDescription\n-----------\nAzure Event Hub streaming source. Emits a record with the schema specified by the user. If no schema\nis specified, it will emit a record with 'message'(bytes).\n\nUse Case\n--------\nThis source is used whenever you want to read from Azure Event Hub. For example, you may want to read messages\nfrom Azure Event Hub and write them to a Table.\n\nProperties\n----------\n**namespace:** Azure Event Hub namespace under which event hub is present. For example, `event-hub-demo-ns`\n\n**name:** Name of the Azure Event Hub under provided namespace. For example, `event-hub-demo` event hub under `event-hub-demo-ns`\n\n**policyName:** Name of the policy for the provided event hub. This can be found under `Shared Access Policies` section of the event hub.\n\n**policyKey:** Primary key to access the provided event hub.\n\n**partitionCount:** Number of partitions of provided Event Hub. Please make sure this number is right otherwise some messages may not be consumed. \n\n**checkpointDirectory:** HDFS directory location where offsets for each partitions will be stored.\n \n**checkpointInterval:** Checkpoint interval in seconds. If not specified, it will default to 10 seconds. It is only available for Spark1.\n\n**consumerGroup:** Event hub consumer group name, defaults to $default.\n\n**offset:** Specify list of partitions for which offset needs to be changed. \nDefaults to -1 which means all the events in the hub will be read from the beginning.  It is only available for Spark1.\n\n**format** Optional format of the event message. Any format supported by CDAP is supported.\nFor example, a value of 'csv' will attempt to parse event as comma-separated values.\nIf no format is given, event will be treated as bytes.\n\n**schema** Output schema of the source. \n\n**maxRate** This parameter regulates the maximum number of messages being processed in a single batch for every EventHub partition. \nand it effectively prevent the job being hold due to the large number of messages being fetched at once. Default is 100.\nIt is only available for Spark2.\n\nExample\n-------\nThis example reads from event hub `event-hub-demo` present under `event-hub-demo-ns` namespace.\nIt is accessed using Shared Access Primary key `xyz` with name `RootManageSharedAccessKey`.\nNow, `event-hub-demo` event but has 2 partitions available. and the checkpoints are stored under `/tmp/eventhub/demo`\ndirectory. The output record is converted into `text` format and field name is `message`.\n\n    {\n        \"name\": \"AzureEventHub\",\n        \"type\": \"streamingsource\",\n        \"properties\": {\n            \"namespace\": \"event-hub-demo-ns\",\n            \"name\": \"event-hub-demo\",\n            \"policyName\": \"RootManageSharedAccessKey\",\n            \"policyKey\": \"xyz\",\n            \"partitionCount\": \"2\",\n            \"checkpointDirectory\": \"/tmp/eventhub/demo\",\n            \"schema\": \"{\n                \\\"type\\\":\\\"record\\\",\n                \\\"name\\\":\\\"etlSchemaBody\\\",\n                \\\"fields\\\":[\n                    {\\\"name\\\":\\\"message\\\",\\\"type\\\":\\\"string\\\"}\n                ]\n            }\",\n            \"format\": \"text\"\n        }\n    }"
  }
}
