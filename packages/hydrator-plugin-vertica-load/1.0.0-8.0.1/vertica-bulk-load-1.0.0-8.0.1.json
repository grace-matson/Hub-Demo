{
  "parents": [
    "system:cdap-etl-batch[4.1.0,4.2.0-SNAPSHOT)",
    "system:cdap-data-pipeline[4.1.0,4.2.0-SNAPSHOT)",
    "system:cdap-data-streams[4.1.0,4.2.0-SNAPSHOT)"
  ],
  "properties": {
    "widgets.VerticaBulkImportAction-action": "{\"metadata\":{\"spec-version\":\"1.0\"},\"configuration-groups\":[{\"label\":\"General\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Username\",\"name\":\"user\"},{\"widget-type\":\"password\",\"label\":\"Password\",\"name\":\"password\"},{\"widget-type\":\"textbox\",\"label\":\"File Path\",\"name\":\"path\"},{\"widget-type\":\"select\",\"label\":\"Copy Statement level\",\"name\":\"level\",\"widget-attributes\":{\"values\":[\"Basic\",\"Advanced\"],\"default\":\"Basic\"}},{\"widget-type\":\"select\",\"label\":\"Auto commit after each file?\",\"name\":\"autoCommit\",\"widget-attributes\":{\"values\":[\"true\",\"false\"],\"default\":\"false\"}}]},{\"label\":\"Generate Basic Copy statement\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Vertica Table name\",\"name\":\"tableName\"},{\"widget-type\":\"textbox\",\"label\":\"Delimiter for the input file\",\"name\":\"delimiter\",\"widget-attributes\":{\"default\":\",\"}}]},{\"label\":\"Advanced Copy Statement\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Copy Statement\",\"name\":\"copyStatement\",\"widget-attributes\":{\"placeholder\":\"COPY tableName FROM STDIN DELIMITER ',' DIRECT ENFORCELENGTH\"}}]},{\"label\":\"JDBC Information\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Connection String\",\"name\":\"connectionString\",\"widget-attributes\":{\"placeholder\":\"jdbc:vertica://localhost:5433/test\"}}]}]}",
    "doc.VerticaBulkImportAction-action": "# VerticaBulkImport Action\n\n\nDescription\n-----------\nBulk import contents of multiple files into vertica table.\n\n\nUse Case\n--------\nVertica Bulk Import Action plugin gets executed after successful mapreduce or spark job. It reads all the files in a given directory and bulk imports contents of those files into vertica table.\n\nProperties\n----------\n\n**user:** User identity for connecting to the specified database. Required for databases that need\nauthentication. Optional for databases that do not require authentication.\n\n**password:** Password to use to connect to the specified database. Required for databases\nthat need authentication. Optional for databases that do not require authentication.\n\n**path:** File directory path from where all the file need to be loaded to vertica.\n\n**level:** Copy statement level. Basic automatically creates copy statement with tableName and delimiter. To use more options please choose Advanced option.\n\n**autoCommit:** Auto commit after every file? Or commit after all the files are loaded? If selected true, commit is applied for every file.\n\n**tableName:** Name of the vertica table where data will be bulk loaded.\n\n**delimiter:** Delimiter in input files. Each delimited values will become columns in specified vertica table.\n\n**copyStatement:** Copy statement to bulk load into vertica. This query must use the COPY statement to load data from STDIN. \nUnlike copying from a file on the host, you do not need superuser privileges to copy a stream. \nAll your user account needs is INSERT privileges on the target table.\n\n**connectionString:** JDBC connection string including database name.\n\n\nExample\n-------\nThis example connects to a vertica database using the specified 'connectionString', which means\nit will connect to the 'test' database of a vertica instance running on 'localhost' and bulk load \ncontents of all the files under /tmp/vertica/ directory to providede table. This plugin will generate\nCOPY testTable FROM STDIN DELIMITER ',' copy statement automatically.\n\n    {\n        \"name\": \"VerticaBulkImportAction\",\n        \"plugin\": {\n            \"name\": \"VerticaBulkImportAction\",\n            \"type\": \"action\",\n            \"properties\": {\n                \"user\": \"user123\",\n                \"password\": \"password-abc\",\n                \"path\": \"file:///tmp/vertica/\",\n                \"level\": \"Basic\",\n                \"autoCommit\": \"false\",\n                \"tableName\": \"testTable\",\n                \"delimiter\": \",\",\n                \"connectionString\": \"jdbc:vertica://localhost:5433/test\"\n            }\n        }\n    }\n"
  }
}