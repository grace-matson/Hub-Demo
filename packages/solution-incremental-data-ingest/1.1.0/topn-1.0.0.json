{
  "parents": [
    "system:cdap-etl-batch[4.1.0,4.3.0)",
    "system:cdap-data-pipeline[4.1.0,4.3.0)",
    "system:cdap-data-streams[4.1.0,4.3.0)"
  ],
  "properties": {
    "widgets.TopN-batchaggregator": "{\"metadata\":{\"spec-version\":\"1.0\",\"label\":\"TopN Aggregator\"},\"configuration-groups\":[{\"label\":\"Top-N Configuration\",\"properties\":[{\"widget-type\":\"input-field-selector\",\"label\":\"Top Field\",\"name\":\"field\",\"description\":\"The field by which top results are sorted on.\"},{\"widget-type\":\"number\",\"label\":\"Results Number\",\"name\":\"size\",\"description\":\"The maximum number of top records sorted by 'field' in result (DEFAULT: 1)\",\"widget-attributes\":{\"default\":1}},{\"widget-type\":\"select\",\"label\":\"Ignore NULL Field\",\"name\":\"ignoreNull\",\"description\":\"Set to 'true' to ignore records with null value in the field to sort by (DEFAULT : false)\",\"widget-attributes\":{\"values\":[\"true\",\"false\"],\"default\":\"false\"}}]}],\"outputs\":[]}",
    "doc.TopN-batchaggregator": "[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n# Top-N\n\nTop-N returns top records from the input set, based on the a criteria specified by a field.\n\n\n## Plugin Properties\nPlugin Configuration\n---------------------\n\n| Config | Required | Default | Description |\n| :------------ | :------: | :----- | :---------- |\n| **Field** | **Y** | N/A | Input field that should be used for comparator. It has to be of type numeric (int, long, float and double).|\n| **Size** | **N** | 1 | Specifies the size of the top-N to be generated. If no of input records is less than N, then all records will ordered by the 'field' specified above.  |\n| **Null Field Value** | **N** | 'false' | Specifies the list of fields from the input that should be considered as hashing keys. All the fields should be non-null. Comma separated list of fields to be used as hash keys. |\n\n\n## Usage Notes\n\nThis plugin takes input records and keeps a given number records with highest values\nin a given field. If the total number of records is smaller than the given number,\noutput records will contain all records sorted by their values in the given field in a\ndescending order.\n\nLet's describe how the plugin works with a simple example. Let's say the input records\nhave columns \"name\" and \"age\". And you want to track top 3 names that are ordered by \"age\".\nwithout ignoring null values. So, the configuration for the plugin would specify\n\n* Field as 'age'\n* Size as '3'\n* Null Field Value as 'false'\n\nNow, following are the input records\n\n```\n    +================+\n    | name   |  age  |\n    +================+\n    | alice  |  NULL |\n    | bob    |   1   |\n    | dave   |   6   |\n    +================+\n```\n\nthen applying the configuration, the output records will be:\n\n```\n    +================+\n    | name   |  age  |\n    +================+\n    | dave   |   6   |\n    | bob    |   1   |\n    | alice  |       |\n    +================+\n```\n\nIf Null Field Value is set to 'true' to ignore records with NULL values in \"age\" field, the output records will be:\n\n```\n    +================+\n    | name   |  age  |\n    +================+\n    | dave   |   6   |\n    | bob    |   1   |\n    +================+\n```"
  }
}