{
  "parents": [
    "system:cdap-etl-batch[4.1.0,4.3.0)",
    "system:cdap-data-pipeline[4.1.0,4.3.0)",
    "system:cdap-data-streams[4.1.0,4.3.0)"
  ],
  "properties": {
    "widgets.NaiveBayesClassifier-sparkcompute": "{\"metadata\":{\"spec-version\":\"1.0\"},\"configuration-groups\":[{\"label\":\"Naive Bayes Classifier Properties\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"FileSet Name\",\"name\":\"fileSetName\"},{\"widget-type\":\"textbox\",\"label\":\"Path\",\"name\":\"path\"},{\"widget-type\":\"textbox\",\"label\":\"Field To Classify\",\"name\":\"fieldToClassify\"},{\"widget-type\":\"textbox\",\"label\":\"Prediction Field\",\"name\":\"predictionField\"},{\"widget-type\":\"textbox\",\"label\":\"Number of Features\",\"name\":\"numFeatures\"}]}],\"outputs\":[]}",
    "widgets.NaiveBayesTrainer-sparksink": "{\"metadata\":{\"spec-version\":\"1.0\"},\"configuration-groups\":[{\"label\":\"Naive Bayes Trainer Properties\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"FileSet Name\",\"name\":\"fileSetName\"},{\"widget-type\":\"textbox\",\"label\":\"Path\",\"name\":\"path\"},{\"widget-type\":\"textbox\",\"label\":\"Field to classify\",\"name\":\"fieldToClassify\"},{\"widget-type\":\"textbox\",\"label\":\"Prediction Field\",\"name\":\"predictionField\"},{\"widget-type\":\"textbox\",\"label\":\"Number of Features\",\"name\":\"numFeatures\"}]}],\"outputs\":[]}",
    "doc.NaiveBayesClassifier-sparkcompute": "# Naive Bayes Classifier\n\n\nDescription\n-----------\nLoads a Naive Bayes model from a file of a FileSet dataset and uses it to classify records.\n\nUse Case\n--------\nThis transform can be used when you have a saved Naive Bayes model and want to classify data.\n\nProperties\n----------\n**fileSetName:** The name of the FileSet to load the model from. (Macro-enabled)\n\n**path:** Path of the FileSet to load the model from. (Macro-enabled)\n\n**fieldToClassify:** A space-separated sequence of words to classify.\n\n**predictionField:** The field on which to set the prediction. It will be of type double.\n\n**numFeatures:** The number of features to use when classifying with the trained model. This should be the same as\nthe number of features used to train the model in Naive Bayes Trainer. The default value if none is provided will be 100. (Macro-enabled)\n\n\nExample\n-------\nThis example uses the ``text`` field of a record to use for classification and sets the prediction\non to the ``isSpam`` field.\n\n    {\n        \"name\": \"NaiveBayesClassifier\",\n        \"type\": \"sparkcompute\",\n        \"properties\": {\n            \"fileSetName\": \"modelFileSet\",\n            \"path\": \"output\",\n            \"fieldToClassify\": \"text\",\n            \"predictionField\": \"isSpam\",\n            \"numFeatures\": \"100\"\n        }\n    }\n\n\nFor example, suppose the classifier receives input records where each record represents an SMS message:\n\n    +===============================================================+\n    | sender | receiver | text                                      |\n    +===============================================================+\n    | john   | jane     | how are you doing                         |\n    | john   | alice    | did you get my email                      |\n    | alice  | jane     | you have won the lottery                  |\n    | alice  | bob      | you could be entitled to debt forgiveness |\n    | bob    | john     | I'll be late today                        |\n    | bob    | bob      | sorry I couldn't make it                  |\n    +===============================================================+\n\nOutput records will contain all fields in addition to a field for the prediction:\n\n    +=========================================================================+\n    | sender | receiver | text                                      | isSpam  |\n    +=========================================================================+\n    | john   | jane     | how are you doing                         | 0.0     |\n    | john   | alice    | did you get my email                      | 0.0     |\n    | alice  | jane     | you have won the lottery                  | 1.0     |\n    | alice  | bob      | you could be entitled to debt forgiveness | 1.0     |\n    | bob    | john     | I'll be late today                        | 0.0     |\n    | bob    | bob      | sorry I couldn't make it                  | 0.0     |\n    +=========================================================================+\n\n",
    "doc.NaiveBayesTrainer-sparksink": "# Naive Bayes Trainer\n\n\nDescription\n-----------\nUsing a Naive Bayes algorithm, trains a model based upon a particular label and text field of a record.\nSaves this model to a file in a FileSet dataset.\n\nUse Case\n--------\nThis sink can be used when you have sample data that you want to use to build a Naive Bayes model, which\ncan be used for classification later on.\n\nProperties\n----------\n**fileSetName:** The name of the FileSet to save the model to. (Macro-enabled)\n\n**path:** Path of the FileSet to save the model to. (Macro-enabled)\n\n**fieldToClassify:** A space-separated sequence of words to use for training.\n\n**predictionField:** The field from which to get the prediction. It must be of type double.\n\n**numFeatures:** The number of features to train the model with. This should be the same as the number of features\nused for the Naive Bayes Classifier. The default value if none is provided will be 100. (Macro-enabled)\n\n\nExample\n-------\nThis example uses the ``text`` field of a record to use as the features and the ``isSpam`` field to use\n as the label to train the model.\n\n    {\n        \"name\": \"NaiveBayesTrainer\",\n        \"type\": \"sparksink\",\n        \"properties\": {\n            \"fileSetName\": \"modelFileSet\",\n            \"path\": \"output\",\n            \"fieldToClassify\": \"text\",\n            \"predictionField\": \"isSpam\",\n            \"numFeatures\": \"100\"\n        }\n    }\n"
  }
}